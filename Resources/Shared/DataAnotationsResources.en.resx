<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryAlreadySaved" xml:space="preserve">
    <value>Category already exist</value>
  </data>
  <data name="ConfirmNotMatch" xml:space="preserve">
    <value>Confirm password do not match</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="EmailAlreadyUsed" xml:space="preserve">
    <value>Email address is already used</value>
  </data>
  <data name="EmailIsNotCorrect" xml:space="preserve">
    <value>Email address is not correct</value>
  </data>
  <data name="EnterAddress" xml:space="preserve">
    <value>Please enter address</value>
  </data>
  <data name="EnterAmount" xml:space="preserve">
    <value>Please enter amount</value>
  </data>
  <data name="EnterBill" xml:space="preserve">
    <value>Please enter bill number</value>
  </data>
  <data name="EnterCarNo" xml:space="preserve">
    <value>Please enter car no</value>
  </data>
  <data name="EnterCarNumber" xml:space="preserve">
    <value>Please enter car number</value>
  </data>
  <data name="EnterCategory" xml:space="preserve">
    <value>Please select category</value>
  </data>
  <data name="EnterCategoryName" xml:space="preserve">
    <value>Please enter category name.</value>
  </data>
  <data name="EnterComissionerNo" xml:space="preserve">
    <value>Please enter comissoner phone no</value>
  </data>
  <data name="EnterContractName" xml:space="preserve">
    <value>Please enter contract name</value>
  </data>
  <data name="EnterCustomerName" xml:space="preserve">
    <value>Enter customer name</value>
  </data>
  <data name="EnterDate" xml:space="preserve">
    <value>Please select note date</value>
  </data>
  <data name="EnterDealerName" xml:space="preserve">
    <value>Please enter dealer name</value>
  </data>
  <data name="EnterDocumentDetails" xml:space="preserve">
    <value>Please enter document details</value>
  </data>
  <data name="EnterDriverName" xml:space="preserve">
    <value>Please enter driver name</value>
  </data>
  <data name="EnterEigency" xml:space="preserve">
    <value>Please enter torkham egency</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Please enter email address</value>
  </data>
  <data name="EnterEmployeeName" xml:space="preserve">
    <value>Please enter employee name</value>
  </data>
  <data name="EnterEmptyPlace" xml:space="preserve">
    <value>Please enter emptying place</value>
  </data>
  <data name="EnterExenseType" xml:space="preserve">
    <value>Please enter expense type</value>
  </data>
  <data name="EnterExpense" xml:space="preserve">
    <value>Please enter expense amount</value>
  </data>
  <data name="EnterFatherName" xml:space="preserve">
    <value>Please enter father name</value>
  </data>
  <data name="EnterFillPlace" xml:space="preserve">
    <value>Please enter filling place name</value>
  </data>
  <data name="EnterFirstQty" xml:space="preserve">
    <value>Please enter first weight</value>
  </data>
  <data name="EnterHireDate" xml:space="preserve">
    <value>Please enter hire date</value>
  </data>
  <data name="EnterItemName" xml:space="preserve">
    <value>Please enter item name.</value>
  </data>
  <data name="EnterItemOwner" xml:space="preserve">
    <value>Please enter item owner name</value>
  </data>
  <data name="EnterItemPrice" xml:space="preserve">
    <value>Please enter item price</value>
  </data>
  <data name="EnterItemQty" xml:space="preserve">
    <value>Please enter item quantity</value>
  </data>
  <data name="EnterItemQuantity" xml:space="preserve">
    <value>Please enter item quantity</value>
  </data>
  <data name="EnterMineName" xml:space="preserve">
    <value>Please enter mine name</value>
  </data>
  <data name="EnterName" xml:space="preserve">
    <value>Please enter name</value>
  </data>
  <data name="EnterNewPassword" xml:space="preserve">
    <value>Please enter new password</value>
  </data>
  <data name="EnterNote" xml:space="preserve">
    <value>Please enter note details</value>
  </data>
  <data name="EnterOldPasswrd" xml:space="preserve">
    <value>Please enter old password</value>
  </data>
  <data name="EnterPaid" xml:space="preserve">
    <value>Please enter total paid</value>
  </data>
  <data name="EnterPhone" xml:space="preserve">
    <value>Please enter phone number</value>
  </data>
  <data name="EnterPurchasePrice" xml:space="preserve">
    <value>Please enter purchase price</value>
  </data>
  <data name="EnterQty" xml:space="preserve">
    <value>Please enter weight of item</value>
  </data>
  <data name="EnterRemainderDate" xml:space="preserve">
    <value>Please select note reminder date</value>
  </data>
  <data name="EnterRentPerTon" xml:space="preserve">
    <value>Please enter per ton rent</value>
  </data>
  <data name="EnterReturnQty" xml:space="preserve">
    <value>Please enter return quantity</value>
  </data>
  <data name="EnterSalary" xml:space="preserve">
    <value>Please enter salary</value>
  </data>
  <data name="EnterSalePrice" xml:space="preserve">
    <value>Please enter sale price</value>
  </data>
  <data name="EnterSecondQty" xml:space="preserve">
    <value>Please enter second weight</value>
  </data>
  <data name="EnterSeek" xml:space="preserve">
    <value>Please enter number of seeks</value>
  </data>
  <data name="EnterStockLocation" xml:space="preserve">
    <value>Enter stock location</value>
  </data>
  <data name="EnterStockName" xml:space="preserve">
    <value>Please enter stock name</value>
  </data>
  <data name="EnterTotalExpense" xml:space="preserve">
    <value>Please enter total expense</value>
  </data>
  <data name="EnterWeight" xml:space="preserve">
    <value>Please enter total weight</value>
  </data>
  <data name="ExpenseTypeExist" xml:space="preserve">
    <value>This type is exist</value>
  </data>
  <data name="ItemAlreadySaved" xml:space="preserve">
    <value>This Item is already  exist</value>
  </data>
  <data name="PasswordCheck" xml:space="preserve">
    <value>Password mus contain 6 letters one digit and capital letter</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Please enter password</value>
  </data>
  <data name="PleaseEnterAmount" xml:space="preserve">
    <value>Please enter paid amount</value>
  </data>
  <data name="PleaseSalectDate" xml:space="preserve">
    <value>Please select date</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Please select category</value>
  </data>
  <data name="SelectCurrency" xml:space="preserve">
    <value>Please select currency</value>
  </data>
  <data name="SelectCustomer" xml:space="preserve">
    <value>Please select customer</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Please select date</value>
  </data>
  <data name="SelectDealer" xml:space="preserve">
    <value>Please select dealer</value>
  </data>
  <data name="SelectDebitCredit" xml:space="preserve">
    <value>Please select debit / credit</value>
  </data>
  <data name="SelectDepartment" xml:space="preserve">
    <value>Please select department</value>
  </data>
  <data name="SelectedHasAccount" xml:space="preserve">
    <value>Selected employee has an account</value>
  </data>
  <data name="SelectEmployee" xml:space="preserve">
    <value>Please select employee</value>
  </data>
  <data name="SelectExpenseDate" xml:space="preserve">
    <value>Please select expense date</value>
  </data>
  <data name="SelectExpenseType" xml:space="preserve">
    <value>Please select expense type</value>
  </data>
  <data name="SelectImage" xml:space="preserve">
    <value>Please select docuement image</value>
  </data>
  <data name="SelectItem" xml:space="preserve">
    <value>Please select item</value>
  </data>
  <data name="SelectItemType" xml:space="preserve">
    <value>Please select item type</value>
  </data>
  <data name="SelectResponsible" xml:space="preserve">
    <value>Select stock repsonsible</value>
  </data>
  <data name="SelectStock" xml:space="preserve">
    <value>Please select stock</value>
  </data>
  <data name="StockAlreadyExist" xml:space="preserve">
    <value>Stock already exist</value>
  </data>
</root>