// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShawkanyDb;
using ShawkanyDb.Models.Model;
using System;

namespace ShawkanyDb.Migrations
{
    [DbContext(typeof(ShawkanyDbContext))]
    [Migration("20201127042446_latest5")]
    partial class latest5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShawkanyDb.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID");

                    b.Property<string>("Category1")
                        .HasColumnName("Category")
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ShawkanyDb.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID");

                    b.Property<string>("Company1")
                        .HasColumnName("Company")
                        .HasMaxLength(50);

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ShawkanyDb.Corporation", b =>
                {
                    b.Property<int>("CorporationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CorporationID");

                    b.Property<string>("Corporation1")
                        .HasColumnName("Corporation")
                        .HasMaxLength(50);

                    b.HasKey("CorporationId");

                    b.ToTable("Corporation");
                });

            modelBuilder.Entity("ShawkanyDb.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CountryID");

                    b.Property<string>("Country1")
                        .HasColumnName("Country")
                        .HasMaxLength(50);

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ShawkanyDb.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CurrencyID");

                    b.Property<string>("Currency1")
                        .HasColumnName("Currency")
                        .HasMaxLength(50);

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ShawkanyDb.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("CurrencyExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CurrencyExchangeID");

                    b.Property<double?>("AfghaniRateToRupe");

                    b.Property<double?>("AfhaniRateToDoller");

                    b.HasKey("CurrencyExchangeId");

                    b.ToTable("CurrencyExchangeRate");
                });

            modelBuilder.Entity("ShawkanyDb.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(15);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ShawkanyDb.Deal", b =>
                {
                    b.Property<int>("DealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DealID");

                    b.Property<int?>("CorporationId")
                        .HasColumnName("CorporationID");

                    b.Property<double?>("Credit");

                    b.Property<int?>("CurrencyId")
                        .HasColumnName("CurrencyID");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DealTypeId")
                        .HasColumnName("DealTypeID");

                    b.Property<double?>("Debit");

                    b.HasKey("DealId");

                    b.HasIndex("CorporationId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DealTypeId");

                    b.ToTable("Deal");
                });

            modelBuilder.Entity("ShawkanyDb.DealType", b =>
                {
                    b.Property<int>("DealTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DealTypeID");

                    b.Property<string>("DealType1")
                        .HasColumnName("DealType")
                        .HasMaxLength(50);

                    b.HasKey("DealTypeId");

                    b.ToTable("DealType");
                });

            modelBuilder.Entity("ShawkanyDb.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(20);

                    b.Property<int>("Salary");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ShawkanyDb.Expence", b =>
                {
                    b.Property<int>("ExpenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExpenceID");

                    b.Property<string>("Detail")
                        .HasMaxLength(200);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID");

                    b.Property<int?>("ExpenceAmount");

                    b.Property<DateTime?>("ExpenceDate")
                        .HasColumnType("date");

                    b.Property<int?>("ExpenceTypeId")
                        .HasColumnName("ExpenceTypeID");

                    b.HasKey("ExpenceId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExpenceTypeId");

                    b.ToTable("Expence");
                });

            modelBuilder.Entity("ShawkanyDb.ExpenceType", b =>
                {
                    b.Property<int>("ExpenceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExpenceTypeID");

                    b.Property<string>("ExpenceType1")
                        .HasColumnName("ExpenceType")
                        .HasMaxLength(50);

                    b.HasKey("ExpenceTypeId");

                    b.ToTable("ExpenceType");
                });

            modelBuilder.Entity("ShawkanyDb.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ItemID");

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryID");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID");

                    b.Property<int?>("CountryId")
                        .HasColumnName("CountryID");

                    b.Property<string>("LatinName")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int?>("OldPrice");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ShawkanyDb.Item2", b =>
                {
                    b.Property<int>("Item2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Item2ID");

                    b.Property<int?>("CurrencyId")
                        .HasColumnName("CurrencyID");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<int?>("ItemId")
                        .HasColumnName("ItemID");

                    b.Property<DateTime?>("ManufictureDate")
                        .HasColumnType("date");

                    b.Property<int?>("PurchasePrice");

                    b.Property<int?>("Quantity");

                    b.Property<int?>("SalePrice");

                    b.HasKey("Item2Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ItemId");

                    b.ToTable("Item2");
                });

            modelBuilder.Entity("ShawkanyDb.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoanID");

                    b.Property<int?>("CurrencyId")
                        .HasColumnName("CurrencyID");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("LoanDate")
                        .HasColumnType("date");

                    b.Property<int?>("Quantity");

                    b.HasKey("LoanId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("ShawkanyDb.Models.Model.SalaryPayment", b =>
                {
                    b.Property<int>("SalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalaryPaymentID");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("PaidAmount")
                        .HasColumnName("PaidAmount");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnName("PaidDate");

                    b.Property<int>("Remain")
                        .HasColumnName("Remain");

                    b.HasKey("SalaryPaymentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalaryPayment");
                });

            modelBuilder.Entity("ShawkanyDb.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NoteID");

                    b.Property<int?>("EmpoyeeId")
                        .HasColumnName("EmpoyeeID");

                    b.Property<string>("Note1")
                        .HasColumnName("Note");

                    b.Property<DateTime?>("RemindDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("date");

                    b.HasKey("NoteId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("ShawkanyDb.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PurchaseID");

                    b.Property<string>("BillNo")
                        .HasColumnName("Bill_No")
                        .HasMaxLength(50);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID");

                    b.Property<int?>("CorporationId")
                        .HasColumnName("CorporationID");

                    b.Property<int?>("CountryId")
                        .HasColumnName("CountryID");

                    b.Property<int?>("CurrencyId")
                        .HasColumnName("CurrencyID");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<int?>("ItemId")
                        .HasColumnName("ItemID");

                    b.Property<DateTime?>("ManufictureDate")
                        .HasColumnType("date");

                    b.Property<double?>("PurchasePrice");

                    b.Property<string>("PurchaseState")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity");

                    b.Property<double?>("SalePrice");

                    b.Property<int?>("StockId")
                        .HasColumnName("StockID");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CorporationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ItemId");

                    b.HasIndex("StockId");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("ShawkanyDb.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SaleID");

                    b.Property<string>("BillNo")
                        .HasColumnName("Bill_No")
                        .HasMaxLength(50);

                    b.Property<int?>("CurrencyId")
                        .HasColumnName("CurrencyID");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("CustomerID");

                    b.Property<double?>("Discount");

                    b.Property<int?>("ItemId")
                        .HasColumnName("ItemID");

                    b.Property<string>("Note")
                        .HasMaxLength(200);

                    b.Property<int?>("Quantity");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("date");

                    b.Property<string>("SaleState")
                        .HasMaxLength(50);

                    b.HasKey("SaleId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("ShawkanyDb.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StockID");

                    b.Property<string>("Stock1")
                        .HasColumnName("Stock")
                        .HasMaxLength(50);

                    b.HasKey("StockId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("ShawkanyDb.Deal", b =>
                {
                    b.HasOne("ShawkanyDb.Corporation", "Corporation")
                        .WithMany("Deal")
                        .HasForeignKey("CorporationId")
                        .HasConstraintName("FK_Deal_Corporation");

                    b.HasOne("ShawkanyDb.Currency", "Currency")
                        .WithMany("Deal")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Deal_Currency");

                    b.HasOne("ShawkanyDb.Customer", "Customer")
                        .WithMany("Deal")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Deal_Customer");

                    b.HasOne("ShawkanyDb.DealType", "DealType")
                        .WithMany("Deal")
                        .HasForeignKey("DealTypeId")
                        .HasConstraintName("FK_Deal_DealType");
                });

            modelBuilder.Entity("ShawkanyDb.Expence", b =>
                {
                    b.HasOne("ShawkanyDb.Employee", "Employee")
                        .WithMany("Expence")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Expence_Employee");

                    b.HasOne("ShawkanyDb.ExpenceType", "ExpenceType")
                        .WithMany("Expence")
                        .HasForeignKey("ExpenceTypeId")
                        .HasConstraintName("FK_Expence_ExpenceType");
                });

            modelBuilder.Entity("ShawkanyDb.Item", b =>
                {
                    b.HasOne("ShawkanyDb.Category", "Category")
                        .WithMany("Item")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Item_Category");

                    b.HasOne("ShawkanyDb.Company", "Company")
                        .WithMany("Item")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Item_Company");

                    b.HasOne("ShawkanyDb.Country", "Country")
                        .WithMany("Item")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Item_Country");
                });

            modelBuilder.Entity("ShawkanyDb.Item2", b =>
                {
                    b.HasOne("ShawkanyDb.Currency", "Currency")
                        .WithMany("Item2")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Item2_Currency");

                    b.HasOne("ShawkanyDb.Item", "Item")
                        .WithMany("Item2")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_Item2_Item");
                });

            modelBuilder.Entity("ShawkanyDb.Loan", b =>
                {
                    b.HasOne("ShawkanyDb.Currency", "Currency")
                        .WithMany("Loan")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Loan_Currency");

                    b.HasOne("ShawkanyDb.Customer", "Customer")
                        .WithMany("Loan")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Loan_Customer");
                });

            modelBuilder.Entity("ShawkanyDb.Models.Model.SalaryPayment", b =>
                {
                    b.HasOne("ShawkanyDb.Employee", "Employee")
                        .WithMany("SalaryPayment")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Salary_Employee")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShawkanyDb.Purchase", b =>
                {
                    b.HasOne("ShawkanyDb.Company", "Company")
                        .WithMany("Purchase")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Purchase_Company");

                    b.HasOne("ShawkanyDb.Corporation", "Corporation")
                        .WithMany("Purchase")
                        .HasForeignKey("CorporationId")
                        .HasConstraintName("FK_Purchase_Corporation");

                    b.HasOne("ShawkanyDb.Country", "Country")
                        .WithMany("Purchase")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Purchase_Country");

                    b.HasOne("ShawkanyDb.Currency", "Currency")
                        .WithMany("Purchase")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Purchase_Currency");

                    b.HasOne("ShawkanyDb.Employee", "Employee")
                        .WithMany("Purchase")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Purchase_Employee");

                    b.HasOne("ShawkanyDb.Item", "Item")
                        .WithMany("Purchase")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_Purchase_Item");

                    b.HasOne("ShawkanyDb.Stock", "Stock")
                        .WithMany("Purchase")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_Purchase_Stock");
                });

            modelBuilder.Entity("ShawkanyDb.Sale", b =>
                {
                    b.HasOne("ShawkanyDb.Currency", "Currency")
                        .WithMany("Sale")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Sale_Currency");

                    b.HasOne("ShawkanyDb.Customer", "Customer")
                        .WithMany("Sale")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Sale_Customer");

                    b.HasOne("ShawkanyDb.Item", "Item")
                        .WithMany("Sale")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_Sale_Item");
                });
#pragma warning restore 612, 618
        }
    }
}
